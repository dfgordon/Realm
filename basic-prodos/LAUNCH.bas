0  REM MUST BE MINIFIED
1  PRINT: PRINT CHR$(4);"PR#0": PRINT CHR$(4);"IN#0"
2  CLEAR : RESTORE : POKE -16370,0
3  LOMEM: 31744

10  PRINT CHR$(4);"BLOAD TITLE.PIC,A$4000"
20  HOME: POKE -16299,0: POKE  - 16304,0: POKE  - 16302,0: PRINT CHR$(4);"BLOAD BIN/SOUND": GET A$: TEXT: PRINT CHR$(4);"BLOAD BIN/DISKLIB"
30  CLEAR : RESTORE : GOSUB 8000: GOSUB 5300: POKE 8,0: POKE 1014,0: POKE 1015,64: PRINT CHR$(4);"PREFIX": INPUT P0$

40  HOME: PRINT "REALM V1.5.0": VTAB 24: PRINT "PLEASE USE CAPS LOCK";
50  PN$(0) = "CONFIGURE": PN$(1) = "GENERATE PARTY": PN$(2) = "ENTER GAME": PN$(3) = "LIST PARTIES"
60  PN$(4) = "RENAME PARTY": PN$(5) = "DELETE PARTY": PN$(6) = "IMPORT PARTY": PN$(7) = "EXPORT PARTY": PN$(8) = "HELP"
70  L = 3: I1 = 0: I2 = 8: B$ = CHR$(13): W$ = "SELECT- ": GOSUB 150: ON M+1 GOTO 5000,1000,6000,2000,3000,4000,6400,6500,7500

80  &("COPY",PS$,FS$,PD$,FS$): RETURN: REM COPY1
90  &("COPY",PS$,FS$,PD$,FD$): RETURN: REM COPY2

100  REM TEST FOR A$ IN B$
101  TST = 1
102  IF TST>LEN(B$) THEN TST = 0: RETURN
103  IF A$=MID$(B$,TST,1) THEN RETURN
104  TST = TST + 1: GOTO 102

110  REM PROMPT
111  W$ = ""
112  A$ = CHR$(13): GOSUB 100: IF TST THEN W$ = W$ + "RET = SELECT / GO IN" + CHR$(13)
113  A$ = CHR$(9): GOSUB 100: IF TST THEN W$ = W$ + "TAB = MORE SUBDIRS" + CHR$(13)
114  A$ = CHR$(27): GOSUB 100: IF TST>0 AND DEPTH>0 THEN W$ = W$ + "ESC = GO BACK UP" + CHR$(13)
115  IF TST>0 AND DEPTH=0 THEN W$ = W$ + "ESC = ABORT" + CHR$(13)
116  A$ = " ": GOSUB 100: IF TST THEN W$ = W$ + "SPC = USE CURRENT PATH" + CHR$(13)
119  RETURN

120  PRINT: PRINT CHR$(4);"PREFIX ";P0$: RETURN

140  REM NOMENU SUBROUTINE
141  HTAB 1: VTAB L: PRINT "NO ITEMS": PRINT: PRINT W$;: GET A$: GOSUB 100: IF TST>0 THEN M=-1: RETURN
142  GOTO 141

150  REM MENU SUBROUTINE
151  REM IN: PN$()=ITEMS, I1=FIRST, I2=LAST, L=FIRST ROW, B$=TERMINATOR KEYS, W$=PROMPT
152  REM OUT: A$=KEYSTROKE, M=ITEM INDEX, PN$(M)=ITEM NAME
153  IF I2<I1 THEN GOSUB 140: RETURN
154  N = I1: M = I1: HTAB 1: VTAB L: PRINT "1) ";: INVERSE: PRINT PN$(I1): NORMAL: IF I2>I1 THEN FOR I = I1+1 TO I2: PRINT I-I1+1;") ";PN$(I): NEXT
155  HTAB 1: VTAB L+I2-I1+2: PRINT W$;: GET A$: GOSUB 100: IF TST>0 THEN RETURN
156  IF VAL(A$)>=1 AND VAL(A$)<=I2-I1+1 THEN M = I1+VAL(A$)-1: RETURN
157  IF A$ = CHR$(8) OR A$ = CHR$(11) THEN N = M: M = M - 1: IF M<I1 THEN M = I2
158  IF A$ = CHR$(10) OR A$ = CHR$(21) THEN N = M: M = M + 1: IF M>I2 THEN M = I1
159  HTAB 4: VTAB N+L-I1: PRINT PN$(N): INVERSE: HTAB 4: VTAB M+L-I1: PRINT PN$(M): NORMAL: GOTO 155

160  PRINT " (Y/N) ? ";
161  GET A$: IF A$ <> "Y" AND A$ <> "N" THEN 161
162  RETURN

170  REM GET DIR ITEMS INDICATED BY WS
171  PRINT CHR$(4);"OPEN ";PS$;",TDIR"
172  PRINT CHR$(4);"READ ";PS$
173  FOR I=1 TO 3: INPUT A$: NEXT: COUNT = 0
174  INPUT A$: IF A$="" OR COUNT>16 THEN 179
175  IF LEN(A$) < 20 THEN 174
176  IF WS>1 AND MID$(A$,18,3) = "DIR" THEN GOSUB 190: GOTO 174
177  IF WS/2 <> INT(WS/2) AND MID$(A$,18,3) = "TXT" AND MID$(A$,2,2) = "D." THEN GOSUB 190: GOTO 174
178  GOTO 174
179  PRINT CHR$(4);"CLOSE ";PS$: RETURN: REM FOUND COUNT SUBDIRS

190  REM PARSE DIR ENTRY
191  PN$(COUNT) = "": J = 2
192  IF MID$(A$,J,1)=" " OR J>16 THEN PN$(COUNT) = PN$(COUNT) + " (" + MID$(A$,18,3) + ")": COUNT = COUNT + 1: RETURN
193  PN$(COUNT) = PN$(COUNT) + MID$(A$,J,1): J = J + 1: GOTO 192

200  HOME: PRINT "WHAT CLASS SHOULD ";NM$(A);" BE?"
201  PN$(0) = "FIGHTER": PN$(1) = "WIZARD": PN$(2) = "CLERIC": PN$(3) = "THIEF": PN$(4) = "MONK": PN$(5) = "PALADIN": PN$(6) = "RANGER"
202  L = 3: I1 = 0: I2 = 6: B$ = CHR$(13): W$ = "SELECT- ": GOSUB 150: CL$(A) = PN$(M): RETURN

250  HOME: PRINT "WHAT RACE SHOULD ";NM$(A);" BE?"
251  PN$(0) = "HUMAN": PN$(1) = "ELF": PN$(2) = "DWARF": PN$(3) = "HOBBIT"
252  L = 3: I1 = 0: I2 = 3: B$ = CHR$(13): W$ = "SELECT- ": GOSUB 150: RA$(A) = PN$(M)
260  IF M = 1 AND CL$(A) = "CLERIC" THEN 290
261  IF M = 1 AND CL$(A) = "PALADIN" THEN 290
262  IF M = 1 AND CL$(A) = "THIEF" THEN 290
263  IF M = 2 AND CL$(A) = "MONK" THEN 290
264  IF M = 2 AND CL$(A) = "WIZARD" THEN 290
265  IF M = 2 AND CL$(A) = "PALADIN" THEN 290
266  IF M = 2 AND CL$(A) = "CLERIC" THEN 290
267  IF M = 3 AND CL$(A) = "MONK" THEN 290
268  IF M = 3 AND CL$(A) = "PALADIN" THEN 290
269  IF M = 3 AND CL$(A) = "WIZARD" THEN 290
270  IF M = 3 AND CL$(A) = "RANGER" THEN 290
280  RETURN
290  PRINT: PRINT CL$(A);" CANNOT BE A ";RA$(A): GET A$: GOTO 250

350  ON I+1 GOTO 351,352,353,354,355,356
351  PRINT "STRENGTH";: RETURN
352  PRINT "INTELLIGENCE";: RETURN
353  PRINT "WISDOM";: RETURN
354  PRINT "AGILITY";: RETURN
355  PRINT "STAMINA";: RETURN
356  PRINT "CHARISMA";: RETURN

360  C = 0: FOR I = 0 TO 5: A%(I) = 12: NEXT
361  HOME: PRINT "ADJUST ABILITIES:": PRINT: FOR I = 0 TO 5: GOSUB 350: PRINT ": ";A%(I): NEXT: PRINT: PRINT "UNUSED: ";C
364  M = 0: N = 0: P = 5: GOSUB 380: HTAB 1: VTAB 14: IF C > 0 THEN PRINT "UNUSED POINTS! ";: GET A$: GOTO 361
365  PRINT "ACCEPTABLE (ESC=NO) ? ";: GET A$: IF A$ = CHR$(27) THEN 361
366  AF%(A) = A%(0): AG%(A) = A%(1): AH%(A) = A%(2): AI%(A) = A%(3): AJ%(A) = A%(4): AK%(A) = A%(5): RETURN

370  L = 0: IF A$ = CHR$(8) THEN L = - 1
371  IF A$ = CHR$(21) THEN L = 1
372  IF A$ = "A" OR A$ = CHR$(11) THEN N = M: M = M - 1: IF M<0 THEN M = P
373  IF A$ = "Z" OR A$ = CHR$(10) THEN N = M: M = M + 1: IF M>P THEN M = 0
374  RETURN

380  VTAB 12: PRINT "LR-ARROWS ADJUST (REDUCE FIRST)": PRINT "UD-ARROWS/A/Z SELECT, ENTER FINISHES"
381  HTAB 1: VTAB N+3: I=N: GOSUB 350: PRINT ": ";A%(I);TAB(38): INVERSE: HTAB 1: VTAB M+3: I=M: GOSUB 350: NORMAL: PRINT ": ";A%(I);TAB(38)
382  HTAB 9: VTAB 10: PRINT C;TAB(38): HTAB 1: VTAB 14: GET A$: GOSUB 370: IF A$ = CHR$(13) THEN RETURN
383  A%(M) = A%(M) + L: C = C - L: IF A%(M) < 5 OR A%(M) > 20 OR C < 0 THEN L = L*-1: GOTO 383
384  GOTO 381

400  REM PICK PARTY
410  GOSUB 2100: IF M = 0 THEN GET A$: RETURN
420  L = 5: I1 = 0: I2 = M-1: B$ = CHR$(27) + CHR$(13): W$ = "ESC CANCELS- ": GOSUB 150: L = M
430  IF A$ = CHR$(27) THEN M = 0: RETURN
440  NA$ = PN$(L): M = 1: RETURN

500  REM LOAD
510  PRINT : PRINT CHR$(4);"OPEN ";B$;"D.";NA$
520  PRINT CHR$(4);"READ ";B$;"D.";NA$
525  FOR A = 0 TO 3
530  INPUT NM$(A)
531  INPUT RA$(A)
532  INPUT CL$(A)
533  INPUT ZA%(A)
534  INPUT AB%(A)
535  INPUT AC%(A)
536  INPUT AF%(A)
537  INPUT AG%(A)
538  INPUT AH%(A)
539  INPUT AI%(A)
540  INPUT AJ%(A)
541  INPUT AK%(A)
542  INPUT DV$(A)
543  INPUT DW$(A)
544  INPUT DX$(A)
545  INPUT WT%(A)
546  FOR M = 0 TO 7: INPUT AP$(A,M): NEXT
547  FOR M = 0 TO 15: INPUT AX$(A,M): NEXT
548  NEXT
565  INPUT X
566  INPUT Y
570  INPUT AD%: INPUT AE: INPUT FL%: INPUT RM$
571  FOR I = 0 TO 5: INPUT FG%(I): NEXT I
575  PRINT CHR$(4);"CLOSE ";B$;"D.";NA$
580  GOSUB 8200
590  RETURN

600  REM SAVE
601  PRINT : PRINT CHR$(4);"OPEN ";B$;"D.";NA$
602  PRINT CHR$(4);"WRITE ";B$;"D.";NA$
603  FOR A = 0 TO 3
604  PRINT NM$(A)
605  PRINT RA$(A)
606  PRINT CL$(A)
607  PRINT ZA%(A)
608  PRINT AB%(A)
609  PRINT AC%(A)
610  PRINT AF%(A)
611  PRINT AG%(A)
612  PRINT AH%(A)
613  PRINT AI%(A)
614  PRINT AJ%(A)
615  PRINT AK%(A)
616  PRINT DV$(A)
617  PRINT DW$(A)
618  PRINT DX$(A)
619  PRINT WT%(A)
620  FOR M = 0 TO 7: PRINT AP$(A,M): NEXT
621  FOR M = 0 TO 15: PRINT AX$(A,M): NEXT
622  NEXT
623  PRINT X
624  PRINT Y
625  PRINT AD%: PRINT AE: PRINT FL%: PRINT RM$
626  FOR I = 0 TO 5: PRINT FG%(I): NEXT I
627  PRINT CHR$(4);"CLOSE ";B$;"D.";NA$
628  RETURN

700  REM FILE PICKER, WS=WHAT TO SHOW, WP=WHAT TO PICK, PS$=PATH PICKED
710  COUNT = 0: &("VOLS",VO$,CAP,COUNT): IF COUNT=0 THEN HOME: PRINT "NO VOLUMES FOUND ";: GET A$: PS$ = "": RETURN
711  FOR I = 0 TO COUNT-1: PN$(I) = VO$(I) + " (" + STR$(CAP(I)) + ")": NEXT
720  POKE 34,1: HOME: POKE 34,0: L = 3: B$ = CHR$(13) + CHR$(9): W$ = "RET = SELECT VOLUME" + CHR$(13) + "TAB = RESCAN": I1 = 0: I2 = COUNT-1: GOSUB 150
730  IF A$ = CHR$(9) THEN 710
740  IF CAP(M) < CAP(16) THEN PRINT: PRINT "NOT ENOUGH ROOM ON VOLUME ";: GET A$: HOME: GOTO 720
750  CAP = CAP(M): PS$ = "/" + LEFT$(PN$(M),LEN(PN$(M))-LEN(STR$(CAP))-3)
760  VO$ = PS$: PLNGTH%(0) = LEN(VO$): DEPTH = 0

770  PAGE = 0
780  GOSUB 170
790  POKE 34,1: HOME: POKE 34,0: PRINT: PRINT "CURRENT PATH:": PRINT PS$: B$ = "": L = 7
800  IF COUNT>0 THEN B$ = B$ + CHR$(13)
810  IF COUNT>9 THEN B$ = B$ + CHR$(9)
820  B$ = B$ + CHR$(27)
821  IF WP>1 THEN B$ = B$ + " "
830  GOSUB 110: IF PAGE > (COUNT-1)/9 THEN PAGE = 0
840  I1 = PAGE*9: I2 = I1 + 8: IF I2>=COUNT THEN I2 = COUNT-1
850  GOSUB 150: REM MENU SELECTION
860  IF A$ = CHR$(9) THEN PAGE = PAGE + 1: GOTO 790
870  IF A$ = " " THEN M = FRE(0): RETURN
871  IF A$ = CHR$(27) AND DEPTH = 0 THEN PS$ = "": M = FRE(0): RETURN 
880  IF A$ = CHR$(27) THEN DEPTH = DEPTH - 1: PS$ = LEFT$(PS$,PLNGTH%(DEPTH)): GOTO 770
881  A$ = RIGHT$(PN$(M),5): PD$ = LEFT$(PN$(M),LEN(PN$(M))-6)
882  IF A$ = "(DIR)" THEN 890
883  PS$ = PS$ + "/" + PD$: M = FRE(0): RETURN
890  IF LEN(PS$)+LEN(PD$) > 56 THEN PRINT: PRINT "PATH TOO LONG ";: GET A$: GOTO 790
891  DEPTH = DEPTH + 1: PS$ = PS$ + "/" + PD$: PLNGTH%(DEPTH) = LEN(PS$): GOTO 770

900  REM LOAD LIST
901  FOR I = 0 TO 9: PN$(I) = "EMPTY": NEXT I
902  PS$ = P0$ + "PARTIES": WS = 1: GOSUB 170: IF COUNT>10 THEN COUNT = 10
903  IF COUNT>0 THEN FOR I = 0 TO COUNT-1: PN$(I) = MID$(PN$(I),3,LEN(PN$(I))-8): NEXT
904  RETURN

1000  REM CREATE PARTY
1010  GOSUB 900: GOSUB 1900: IF M=1 THEN HOME: PRINT "THERE IS NO ROOM ";:GET A$: GOTO 40

1100  X = 45 : Y = 18 : RM$="ARRINEA": AE = 100: AD% = 100: FL% = 0
1101  FOR I = 0 TO 5: FG%(I) = 0: NEXT I
1110  FOR A = 0 TO 3
1120  HOME
1121 ZA%(A) = 0
1122 AP$(A,0) = "DAGGER":AP$(A,1) = "LEATHER": FOR I = 2 TO 7: AP$(A,I) = "": NEXT I
1123 CL$(A) = "":RA$(A) = "": FOR I = 0 TO 15: AX$(A,I) = "": NEXT I
1124 DV$(A) = "LEATHER":DW$(A) = "DAGGER":DX$(A) = ""
1130  PRINT "THIS IS CHARACTER #";A+1
1140  PRINT "WHAT SHOULD THIS CHARACTERS NAME BE?"
1150  GOSUB 7000: NM$(A) = A$
1160  IF A$ = "" THEN 1150
1170  GOSUB 200: GOSUB 250: GOSUB 360
1200  IF RA$(A) = "ELF" THEN AG%(A) = AG%(A) + 5
1210  IF RA$(A) = "DWARF" THEN AJ%(A) = AJ%(A) + 5
1220  IF RA$(A) = "HOBBIT" THEN AI%(A) = AI%(A) + 5
1230  IF RA$(A) = "HUMAN" THEN AG%(A) = AG%(A) + 5
1240  IF RA$(A) = "HUMAN" THEN AK%(A) = AK%(A) + 5
1250  IF CL$(A) = "MONK" THEN AI%(A) = AI%(A) + 5
1260  IF CL$(A) = "CLERIC" THEN AB%(A) = 60: WT%(A) = 20
1270  IF CL$(A) = "FIGHTER" THEN AB%(A) = 100: WT%(A) = 20
1280  IF CL$(A) = "MONK" THEN AB%(A) = 80: WT%(A) = 10
1290  IF CL$(A) = "PALADIN" THEN AB%(A) = 80: WT%(A) = 10
1300  IF CL$(A) = "RANGER" THEN AB%(A) = 80: WT%(A) = 10
1310  IF CL$(A) = "THIEF" THEN AB%(A) = 60: WT%(A) = 20
1320  IF CL$(A) = "WIZARD" THEN AB%(A) = 50: WT%(A) = 25
1330 AB%(A) = AB%(A) + AJ%(A)
1340 AB%(A) = AB%(A) * 2
1350 AC%(A) = AB%(A)
1390  NEXT

1500  HOME : REM REVIEWING WHOLE PARTY
1501  FOR A = 0 TO 3
1502  HOME : PRINT "REVIEWING CHARACTER ";A+1
1503  PRINT "NAME: ";NM$(A)
1504  PRINT "CLASS: ";CL$(A)
1505  PRINT "RACE: ";RA$(A)
1506  PRINT "STRENGTH: ";AF%(A)
1507  PRINT "INTELLIGENCE: ";AG%(A)
1508  PRINT "WISDOM: ";AH%(A)
1509  PRINT "AGILITY: ";AI%(A)
1510  PRINT "STAMINA: ";AJ%(A)
1511  PRINT "CHARISMA: ";AK%(A)
1512  PRINT "MAXIMUM LEVEL: ";WT%(A)
1513  PRINT "HIT POINTS: ";AB%(A)
1514  GET A$
1515  NEXT
1516  HOME : PRINT "SAVE THIS PARTY";: GOSUB 160: IF A$ = "N" THEN 40

1600  HOME : PRINT "ENTER YOUR PARTY'S NAME-": GOSUB 7100
1610  GOSUB 1800: IF M = 0 THEN 1600
1620  IF M = 1 THEN PRINT: PRINT A$;" ALREADY USED";: GET A$: GOTO 1600
1630  NA$ = A$

1700  REM SAVE ALL DATA
1710  B$ = "PARTIES/": GOSUB 600 : REM SAVE PARTY DATA
1720  PRINT "PARTY SAVED.": PRINT "COPYING MAP FILES...."
1730  PS$ = P0$ + "MAPS": FS$ = "ARRINEA": PD$ = P0$ + "PARTIES": FD$ = "AR." + NA$: GOSUB 90
1740  PS$ = P0$ + "XMAPS": FS$ = "ABYSS": FD$ = "AB." + NA$: GOSUB 90
1750  FS$ = "FONKRAKIS": FD$ = "FO."+ NA$: GOSUB 90 
1760  FS$ = "WORNOTH": FD$ = "WO." + NA$: GOSUB 90: GOSUB 120: GOTO 40

1800  REM VALID NEW NAME
1810  IF A$ = "" OR A$ = "EMPTY" THEN M = 0: RETURN
1820  I = 0
1830  IF A$ = PN$(I) THEN M = 1: RETURN
1840  I = I + 1: IF I = 10 THEN M = 2: RETURN
1850  GOTO 1830

1900  REM ROOM
1910  I = 0
1920  IF PN$(I) = "" OR PN$(I) = "EMPTY" THEN M = 0: RETURN
1930  I = I + 1 : IF I = 10 THEN M = 1: RETURN
1940  GOTO 1920

2000  REM LIST
2010  GOSUB 900: HOME: GOSUB 2100: PRINT: PRINT "PRESS ANY KEY ";: GET A$ : GOTO 40

2100  REM DISPLAY PARTIES
2110  PRINT "PARTIES:": PRINT: M = 0: FOR I = 0 TO 9: IF PN$(I) <> "EMPTY" THEN M = M + 1: PRINT M;") ";PN$(I)
2130  NEXT I:  IF M = 0 THEN PRINT "NO PARTIES ON THIS DISK."
2140  RETURN

3000  REM RENAME
3001  GOSUB 900: HOME: PRINT "--RENAME--": PRINT: GOSUB 400: IF M = 0 THEN GOTO 40
3010  PRINT: PRINT "RENAMING ";NA$: PRINT "CONTINUE";: GOSUB 160: IF A$ = "N" THEN 40
3030  PRINT: PRINT "NEW NAME-": GOSUB 7100: GOSUB 1800: IF M<2 THEN PRINT: PRINT "ALREADY USED OR NOT VALID": GOTO 3030
3040  PRINT : PRINT  CHR$ (4);"RENAME PARTIES/D.";NA$;",PARTIES/D.";A$
3041  PRINT  CHR$ (4);"RENAME PARTIES/AR.";NA$;",PARTIES/AR.";A$
3042  PRINT  CHR$ (4);"RENAME PARTIES/AB.";NA$;",PARTIES/AB.";A$
3043  PRINT  CHR$ (4);"RENAME PARTIES/FO.";NA$;",PARTIES/FO.";A$
3044  PRINT  CHR$ (4);"RENAME PARTIES/WO.";NA$;",PARTIES/WO.";A$
3099  GOTO 40

4000  REM DELETE
4001  GOSUB 900: HOME: PRINT "--DELETE--": PRINT: GOSUB 400: IF M = 0 THEN GOTO 40
4010  PRINT: PRINT "DELETING ";NA$: PRINT "CONTINUE";: GOSUB 160: IF A$ = "N" THEN 40
4040  PRINT : PRINT  CHR$ (4);"DELETE PARTIES/D.";NA$
4041  PRINT  CHR$ (4);"DELETE PARTIES/AR.";NA$
4042  PRINT  CHR$ (4);"DELETE PARTIES/AB.";NA$
4043  PRINT  CHR$ (4);"DELETE PARTIES/FO.";NA$
4044  PRINT  CHR$ (4);"DELETE PARTIES/WO.";NA$
4099  GOTO 40

5000  REM CONFIGURATION
5010  HOME: PRINT "--RAM DISK--"
5015  ONERR GOTO 5050
5020  RB$ = "BIN" + "/": RD$ = "PROG" + "/": PRINT:PRINT CHR$(4);"VERIFY /RAM"
5030  PRINT "RAM DISK FOUND. THIS CAN IMPROVE SPEED": PRINT "ON VINTAGE HARDWARE. USE";: GOSUB 160: IF A$ = "Y" THEN RB$ = "/RAM" + "/": RD$ = "/RAM" + "/"
5040  GOTO 5100
5050  PRINT "NO RAM DISK FOUND. ";: GET A$: CALL -3288
5100  POKE 216,0
5170  HOME: PRINT "--PAUSE DURATION--"
5171  PRINT:PRINT "IF USING AN EMULATOR, PLEASE SET SPEED": PRINT "OPTIONS NOW."
5172  PRINT "THEN TRY A LOOP COUNT: ": GOSUB 7000: EP = VAL(A$): IF EP<1 THEN EP = 1
5173  PRINT: PRINT "STARTING PAUSE LOOP...";
5174  FOR P = 0 TO 500+EP: NEXT P
5175  PRINT "FINISHED."
5176  PRINT "THE PAUSE SHOULD BE 1 - 2 SECONDS.": PRINT "(ENOUGH TIME TO READ A FEW WORDS)"
5177  PRINT "DO WE NEED TO ADJUST";: GOSUB 160: IF A$ = "Y" THEN 5170
5190  ES = EP: HOME: PRINT "SAVE CONFIGURATION";: GOSUB 160: IF A$ = "N" THEN 40
5199  GOSUB 5200: GOTO 40

5200  REM WRITE CONFIG
5210  PRINT : PRINT CHR$(4);"OPEN DD"
5220  PRINT CHR$(4);"WRITE DD"
5281  PRINT ES
5282  PRINT EP
5283  PRINT RB$
5284  PRINT RD$
5290  PRINT CHR$(4);"CLOSE DD"
5299  RETURN

5300  REM READ CONFIG
5310  PRINT : PRINT CHR$(4);"OPEN DD"
5320  PRINT CHR$(4);"READ DD"
5381  INPUT ES
5382  INPUT EP
5383  INPUT RB$
5384  INPUT RD$
5390  PRINT CHR$(4);"CLOSE DD"
5399  RETURN

6000  REM ENTER GAME
6010  GOSUB 900: HOME: PRINT "--ENTER GAME--": PRINT: GOSUB 400: IF M = 0 THEN 40
6020  B$ = "PARTIES/": GOSUB 500: FS% = 0: MD% = 0: GOSUB 9000
6040  PRINT CHR$(4);"BLOAD PARTIES/";LEFT$(RM$,2);".";NA$
6050  PRINT CHR$(4);"BLOAD ";RD$;"OUTSIDE"
6060  POKE 8183,0: POKE 8184,8: POKE 8188,0: POKE 8189,110: REM ASSUME CONSTANT
6070  BP$ = "PROG" + "/"
6080  POKE 16384,0: POKE 103,1: POKE 104,64: POKE 175,255: POKE 176,108: GOTO 1

6300  REM TRANSFER PARTY
6331  HOME: PRINT "PARTY: ";NA$: PRINT "SOURCE PREFIX:": PRINT " ";PS$: PRINT "DESTINATION PREFIX:": PRINT " ";PD$
6332  PRINT: PRINT "IF TWO DISKS BOTH MUST BE INSERTED."
6340  PRINT "PRESS B TO BEGIN, OTHER KEY CANCELS- ";: GET A$: IF A$ <> "B" THEN GOSUB 120: POKE 216,0: RETURN
6350  PRINT: PRINT "WORKING..."
6360  FS$ = "D." + NA$: GOSUB 80
6361  FS$ = "AR." + NA$: GOSUB 80
6362  FS$ = "AB." + NA$: GOSUB 80
6363  FS$ = "FO." + NA$: GOSUB 80
6364  FS$ = "WO." + NA$: GOSUB 80
6370  GOSUB 120: PRINT: PRINT "FINISHED. PRESS ANY KEY.";: GET A$: POKE 216,0: RETURN

6400  REM IMPORT
6401  ONERR GOTO 6600
6402  GOSUB 900: HOME: PRINT "--IMPORT PARTY--": GOSUB 1900: IF M=1 THEN PRINT: PRINT "THERE IS NO ROOM ";:GET A$: POKE 216,0: GOTO 40
6420  WS = 3: WP = 1: GOSUB 700: IF PS$ = "" THEN POKE 216,0: GOTO 40
6430  PD$ = P0$ + "PARTIES/": L = PLNGTH%(DEPTH): NA$ = RIGHT$(PS$,LEN(PS$)-L-3): PS$ = LEFT$(PS$,L): GOSUB 6300: GOTO 40

6500  REM EXPORT
6501  ONERR GOTO 6600
6510  GOSUB 900: HOME: PRINT "--EXPORT PARTY--": PRINT: GOSUB 400 : IF M = 0 THEN POKE 216,0: GOTO 40
6530  WS = 2: WP = 2: GOSUB 700: IF PS$ = "" THEN POKE 216,0: GOTO 40
6540  PD$ = PS$: PS$ = P0$ + "PARTIES/": GOSUB 6300: GOTO 40

6600  HOME: PRINT "THERE WAS PROBABLY A DISK ERROR.": PRINT "ERROR ";PEEK(222);" ON LINE ";PEEK(218)+PEEK(219)*256;". "
6601  PRINT "WE MUST RETURN TO THE MAIN MENU."
6602  PRINT "RESTORE REALM DISK IF REMOVED- ";: GET A$: CALL -10621: GOSUB 120: POKE 216,0: GOTO 40

7000  REM INPUT
7002 A$ = "": HTAB 1: PRINT ">";: CALL -868
7004  GET CH$: CH = ASC(CH$): IF CH = 13 THEN RETURN
7008  IF CH = 8 OR CH = 127 THEN 7014
7010  IF CH<32 OR CH>126 OR CH=44 OR LEN(A$)>16 THEN 7004
7012  PRINT CH$;: A$ = A$ + CH$: GOTO 7004
7014  IF LEN (A$) < 2 THEN 7000
7016 A$ =  LEFT$ (A$, LEN (A$) - 1): POKE 36, PEEK (36) - 1: CALL  - 868: GOTO 7004

7100  REM INPUT PRODOS FRIENDLY NAME
7102 A$ = "": HTAB 1: PRINT ">";: CALL -868
7104  GET CH$: CH = ASC(CH$): IF CH = 13 THEN RETURN
7108  IF CH = 8 OR CH = 127 THEN 7114
7110  IF (CH<65 OR CH>90) AND (CH<48 OR CH>57) AND CH<>46 OR LEN(A$)>11 THEN 7104
7112  PRINT CH$;: A$ = A$ + CH$: GOTO 7104
7114  IF LEN (A$) < 2 THEN 7100
7116 A$ =  LEFT$ (A$, LEN (A$) - 1): POKE 36, PEEK (36) - 1: CALL  - 868: GOTO 7104

7500  HOME: PRINT "HTTPS://GITHUB.COM/DFGORDON/REALM"
7510  PRINT: PRINT "4-WAY MOVE:";: HTAB 14: PRINT "ARROW KEYS"
7511  PRINT: PRINT "4-WAY ][+:";: HTAB 14: PRINT ". IS DOWN, / IS UP"
7512  PRINT: PRINT "8-WAY MOVE:";: HTAB 14: PRINT "0 - =": HTAB 14: PRINT " P [": HTAB 14: PRINT "L ; '"
7513  PRINT: PRINT "8-WAY ][+:";: HTAB 14: PRINT "7 8 9": HTAB 14: PRINT "ARROWS": HTAB 14: PRINT "N M ,": GET A$

7520  HOME: PRINT "A - ATTACK/SCUTTLE": PRINT "B - BOARD SHIP": PRINT "C - CAST": PRINT "E - ENTER"
7530  PRINT "F - FAST STATUS": PRINT "G - GET CHEST": PRINT "I - INVENTORY SWAP": PRINT "K - CLIMB LADDER"
7540  PRINT "Q - SAVE/QUIT": PRINT "R - READY": PRINT "S - STEAL/SURFACE": PRINT "T - TRANSACT"
7550  PRINT "U - USE": PRINT "W - WITHDRAW/ADVANCE": PRINT "X - EXIT SHIP/CRAFT": PRINT "Z - STATUS"
7560  PRINT "CTRL-A - AUTO-RESOLVE COMBAT": PRINT "CTRL-P - PRAY TO THE ONE": PRINT "CTRL-R - REORDER": PRINT "CTRL-S - SOUND": GET A$

7570  HOME: PRINT "PROFICIENCY TABLE": PRINT: GOSUB 8290
7571  PRINT "        DAGR AXE  M/MS BOW  SWRD 2HSW"
7572  PRINT "        ---- ---- ---- ---- ---- ----"
7573  PRINT "CLERIC   ";: C = 0: GOSUB 7599
7574  PRINT "FIGHTER  ";: C = 1: GOSUB 7599
7575  PRINT "MONK     ";: C = 2: GOSUB 7599
7576  PRINT "PALADIN  ";: C = 3: GOSUB 7599
7577  PRINT "RANGER   ";: C = 4: GOSUB 7599
7578  PRINT "THIEF    ";: C = 5: GOSUB 7599
7579  PRINT "WIZARD   ";: C = 6: GOSUB 7599
7580  GET A$: GOTO 7600
7599  FOR I = 0 TO 5: PRINT WU%(C,I);"    ";: NEXT: PRINT: RETURN

7600  HOME: PRINT "ABRIDGED NOTE FROM THE BARON:": PRINT
7602  PRINT "MORDOCK, FORMER ARCHWIZARD OF LEMPHOCYM,";
7604  PRINT "HAS REDISCOVERED THE SECRETS OF THE"
7606  PRINT "PYRAMID GATES, AND TAKEN UP HIS ABODE IN";
7608  PRINT "CRYPTIC WORNOTH. FROM HIS ETHEREAL"
7610  PRINT "STRONGHOLD, HE SENDS FORTH THE RAYS OF"
7612  PRINT "NIGHTMARE, AND TROUBLES ALL THE REALMS."
7614  PRINT "I, XAVIER FRANCIS, EIGHTEENTH BARON"
7616  PRINT "LEMPHOCYM, ATTEMPTED AN ASSAULT ON THE"
7618  PRINT "IRON TOWER, AND FAILED. FIND ME IN THE"
7620  PRINT "BLACK FORTRESS, IN UNPEOPLED FONKRAKIS,"
7622  PRINT "AND WE WILL MAKE A LAST DESPERATE"
7624  PRINT "ATTEMPT TO END THE REIGN OF THE"
7626  PRINT "NIGHTMARE DREAMER. ";: GET A$: GOTO 40

8000  REM GLOBALS
8010  DIM PN$(16): DIM PLNGTH%(16): REM UTIL GLOBALS
8020  DIM VO$(16): DIM CAP(16)
8040  DIM WU%(6,5): DIM FG%(5): DIM A%(5): REM GAME GLOBALS
8050  DIM NM$(3): DIM RA$(3): DIM CL$(3)
8060  DIM CL%(3): DIM ZA%(3)
8070  DIM AB%(3): DIM AC%(3)
8080  DIM AF%(3): DIM AG%(3)
8090  DIM AH%(3): DIM AI%(3)
8100  DIM AJ%(3): DIM AK%(3)
8110  DIM DV$(3): DIM DW$(3)
8120  DIM DX$(3): DIM WT%(3)
8130  DIM GN(8): DIM PM%(8)
8140  DIM PC%(3): DIM GP%(3)
8150  DIM AX$(3,16): DIM AP$(3,9): DIM DR%(3,2): DIM DT%(2)
8199  RETURN

8200  FOR A = 0 TO 3
8210  IF CL$(A) = "CLERIC" THEN CL%(A) = 0
8220  IF CL$(A) = "FIGHTER" THEN CL%(A) = 1
8230  IF CL$(A) = "MONK" THEN CL%(A) = 2
8240  IF CL$(A) = "PALADIN" THEN CL%(A) = 3
8250  IF CL$(A) = "RANGER" THEN CL%(A) = 4
8260  IF CL$(A) = "THIEF" THEN CL%(A) = 5
8270  IF CL$(A) = "WIZARD" THEN CL%(A) = 6
8271  AP$(A,8) = "HA"+"NDS": AP$(A,9) = "SK"+"IN": AX$(A,16) = "NO"+"NE": IF DX$(A) = "" THEN DX$(A) = AX$(A,16)
8272  FOR M = 9 TO 0 STEP -1: P = P*(DW$(A)<>AP$(A,M)) + M*(DW$(A)=AP$(A,M)): NEXT: DR%(A,0) = P
8273  FOR M = 9 TO 0 STEP -1: P = P*(DV$(A)<>AP$(A,M)) + M*(DV$(A)=AP$(A,M)): NEXT: DR%(A,1) = P
8274  FOR M = 16 TO 0 STEP -1: P = P*(DX$(A)<>AX$(A,M)) + M*(DX$(A)=AX$(A,M)): NEXT: DR%(A,2) = P
8280  NEXT
8290  RESTORE: FOR C=0 TO 6: FOR W=0 TO 5: READ WU%(C,W): NEXT: NEXT
8299  RETURN
8300  REM  DA,AX,MA,BO,SW,2H
8310  DATA 5, 5, 8, 5, 5, 5
8320  DATA 9, 9, 9, 9, 9, 9
8330  DATA 8, 7, 7, 8, 7, 5
8340  DATA 7, 8, 8, 7, 9, 7
8350  DATA 9, 9, 7, 9, 7, 6
8360  DATA 9, 7, 7, 9, 7, 5
8370  DATA 8, 4, 4, 4, 4, 2

9000  REM RAM DISK
9010  IF RD$ = "PROG/" THEN RETURN
9020  ONERR GOTO 9900
9030  HOME: PRINT "SETTING UP RAM DISK...": PD$ = "/RAM"
9040  PS$ = P0$ + "BIN"
9050  FS$ = "TWNSPS": GOSUB 80
9060  FS$ = "DNGNSPS": GOSUB 80
9070  FS$ = "OUTSPS": GOSUB 80
9080  PS$ = P0$ + "PROG"
9090  FS$ = "COMBAT": GOSUB 80
9100  FS$ = "OUTSIDE": GOSUB 80
9110  FS$ = "TOWN": GOSUB 80
9120  FS$ = "DUNGEON": GOSUB 80
9130  PRINT CHR$(4);"BSAVE /RAM/TEMP,A$6E00,L2030": REM VERIFY SPACE
9140  GOSUB 120: POKE 216,0: RETURN

9900  PRINT "RAM DISK ERROR. PROCEEDING WITHOUT. ";: GET A$: RB$ = "BIN" + "/": RD$ = "PROG" + "/": CALL -3288: GOTO 9140
